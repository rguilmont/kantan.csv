/*
 * Copyright 2015 Nicolas Rinaudo
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package kantan.csv

trait GeneratedHeaderEncoders {
  [#
  def encoder[[#A1: CellEncoder#], O]([#f1: String#])(f: O => ([#A1#])): HeaderEncoder[O] = new HeaderEncoder[O] {
    override def rowEncoder = RowEncoder.ordered(f)
    override val header = Some(Seq([#f1#]))
  }#

  ]

  [#
  def caseEncoder[[#A1: CellEncoder#], O]([#f1: String#])(f: O => Option[([#A1#])]): HeaderEncoder[O] = new HeaderEncoder[O] {
    override def rowEncoder = RowEncoder.caseOrdered(f)
    override val header = Some(Seq([#f1#]))
  }#

  ]
}
